---
import Base from "../layouts/Base.astro";
import Nav from "../components/Nav.tsx";
import Footer from "../components/Footer.tsx";
import ProjectsGrid, { type Project } from "../components/ProjectsGrid.tsx";
import { getCollection, type CollectionEntry } from "astro:content";
import GsapMorphLottie from "../components/GsapMorphLottie.tsx";

// Typer
type BgEntry = CollectionEntry<"backgrounds">;
type ProjEntry = CollectionEntry<"projects">;
type BgItem = { slug: string; title: string; summary?: string; image?: string | undefined };
type Link = { href: string; label: string };

// Helper
const withBase = (p?: string) => {
  if (!p) return undefined;
  const base = import.meta.env.BASE_URL || "/";
  const b = base.endsWith("/") ? base.slice(0, -1) : base;
  const pp = p.startsWith("/") ? p.slice(1) : p;
  return `${b}/${pp}`;
};

// Vägar
const animUrl  = withBase("lottie/main_animation_new.json")!;
const logoWebm = withBase("lottie/logo.webm");
const logoMp4  = withBase("lottie/logo.mp4");

// Copy
const name = "Adrian Jönsson";
const titlePrimary = "Frontendutvecklare";
const titleSecondary = "Ortopedingenjör";
const intro = `Jag brinner för att bygga tillgängliga, prestandaoptimerade gränssnitt.
Med över 10 års erfarenhet som ortopedingenjör tar jag med mig ett användarcentrerat,
analytiskt arbetssätt in i webbutveckling – där funktion möter form.`;

const location = "Malmö, Sverige";
const availability = "Öppen för jobb- och frilansuppdrag";
const email = "adrianjonsson@hotmail.com";
const links: Link[] = [
  { href: "https://github.com/AdrianCPO", label: "GitHub" },
  { href: "https://www.linkedin.com/in/adrian-jönsson-718884330", label: "LinkedIn" },
];

// BACKGROUNDS
const bgRaw = await getCollection("backgrounds");
const bgItems: BgItem[] = bgRaw
  .sort((a: BgEntry, b: BgEntry) =>
    (a.data.order ?? 999) - (b.data.order ?? 999) ||
    a.data.title.localeCompare(b.data.title)
  )
  .slice(0, 3)
  .map((p: BgEntry) => ({
    slug: p.slug,
    title: p.data.title,
    summary: p.data.summary,
    image: withBase(p.data.image),
  }));

// PROJECTS
const raw = await getCollection("projects");
const allProjects: Project[] = raw
  .map((p: ProjEntry): Project => ({
    slug: p.id.split("/").pop()?.replace(/\.(md|mdx)$/, "") ?? p.id,
    title: p.data.title,
    summary: p.data.summary,
    tags: p.data.tags,
    image: withBase(p.data.image),
    repo: p.data.repo,
    demo: p.data.demo,
    date: p.data.date ?? null,
  }))
  .sort((a: Project, b: Project) => (b.date ?? "").localeCompare(a.date ?? ""));

const featured = allProjects.slice(0, 3);
---

<Base title={`${name} – Profil`}>
  <Fragment slot="header"><Nav client:load /></Fragment>

  <section class="mx-auto max-w-6xl px-0 py-6 sm:py-10">
    <div class="grid gap-6 sm:grid-cols-[auto,1fr] sm:items-center">
      <div id="name-wrap" class="inline-flex items-center relative">
  <!-- LOGGAN FÖRE TEXTEN -->
 <video
  id="logo-anim"
  class="neon neon-pulse pointer-events-none mr-3
         w-[96px] h-[96px] sm:w-[128px] sm:h-[128px]
         opacity-0 scale-90 transition duration-300 ease-out"
  playsinline muted preload="auto"
>
  {logoWebm && <source src={logoWebm} type="video/webm" />}
  {logoMp4  && <source src={logoMp4}  type="video/mp4"  />}
</video>

  <h1 id="name-el" class="text-3xl sm:text-4xl font-bold tracking-tight">
    {name}
  </h1>
</div>

        <p class="mt-1 text-lg">
          {titlePrimary} · <span class="opacity-80">{titleSecondary}</span>
        </p>
        <p class="mt-4 max-w-2xl leading-relaxed opacity-90">{intro}</p>
      </div>
    </div>

    <div class="mt-8 grid gap-3 sm:grid-cols-3 text-sm">
      <div class="rounded-lg border p-3">
        <div class="font-semibold">Plats</div>
        <div class="opacity-80">{location}</div>
      </div>
      <div class="rounded-lg border p-3">
        <div class="font-semibold">Tillgänglighet</div>
        <div class="opacity-80">{availability}</div>
      </div>
      <div class="rounded-lg border p-3">
        <div class="font-semibold">Kontakt</div>
        <div class="opacity-80">
          <a class="underline" href={`mailto:${email}`}>{email}</a>
        </div>
      </div>
    </div>
  </section>

  <section class="mx-auto max-w-6xl mt-10">
    <div class="rounded-xl border p-6">
      <h3 class="font-semibold mb-2 text-lg">Varför ortopedingenjör → frontend?</h3>
      <p class="opacity-90">
        I ortopedteknik handlar allt om passform, funktion och att lyssna på användaren.
        Samma principer guidar mig i UI/UX: empati, noggrann problemlösning och iterativt arbete.
      </p>
    </div>
  </section>

  <!-- Viktigt: 1 kolumn tills XL (animation finns bara på XL+) -->
  <section class="mx-auto max-w-6xl mt-10 grid xl:grid-cols-[minmax(0,1fr)_460px] gap-10 items-start">
    <div class="space-y-10">
      <!-- FÄRDIGHETER -->
      <div id="skills-wrap" class="rounded-xl border p-4">
        <h2 class="text-lg font-semibold mb-3">Färdigheter som ortopedingenjör</h2>

        <div class="grid grid-cols-1 gap-3 xl:grid-cols-2">
          {bgItems.map((it: BgItem, i: number) => (
            <a
              href={withBase(`cpo/#bg-card-${i + 1}`)}
              class={`flex flex-col items-center justify-center text-center border rounded-lg p-3 hover:shadow-sm transition bg-white dark:bg-slate-900 ${i === 2 ? "xl:col-span-2" : ""}`}
            >
              {it.image && (
                <div class="h-28 w-full flex items-center justify-center mb-1 overflow-hidden">
                  <img src={it.image} alt={it.title} class="h-full w-auto object-contain" loading="lazy" decoding="async" />
                </div>
              )}
              <h3 class="font-medium text-sm">{it.title}</h3>
              <p class="text-xs opacity-80 mt-1">{it.summary}</p>
            </a>
          ))}
        </div>
      </div>

      <div id="heart-wrap" class="rounded-xl border p-4 flex items-center justify-center min-h-[220px] bg-slate-50 dark:bg-slate-800">
        <p class="text-base opacity-70 italic">Empati & passion – hjärtat i min utveckling ❤️</p>
      </div>

      <!-- PROJEKT -->
      <div id="projects-wrap" class="rounded-xl border p-4">
        <div class="flex items-baseline justify-between mb-3">
          <h2 class="text-lg font-semibold">Utvalda projekt som utvecklare</h2>
          <a class="text-xs underline" href={withBase("projects/")}>Visa alla</a>
        </div>

        <!-- 1-kolumn på mobil+tablet -->
        <div class="grid grid-cols-1 gap-4 xl:hidden">
          {featured.map((p) => (
            <a href={withBase(`projects/${p.slug}/`)} class="block overflow-hidden rounded-xl border transition hover:shadow-md">
              {p.image && (
                <div class="relative w-full overflow-hidden rounded-t-xl bg-slate-50 dark:bg-slate-900 h-40">
                  <img src={p.image} alt="" class="h-full w-full object-contain p-3" loading="lazy" decoding="async" />
                </div>
              )}
              <div class="p-4">
                <h3 class="font-semibold">{p.title}</h3>
                {p.summary && <p class="text-sm opacity-80 mt-1">{p.summary}</p>}
              </div>
            </a>
          ))}
        </div>

        <!-- På XL+: originalgridden -->
        <div class="hidden xl:block">
          <ProjectsGrid items={featured} />
        </div>
      </div>
    </div>

    <!-- HÖGERKOLUMN: Lottie-ikonspår -->
    <div class="relative hidden xl:block">
      <div id="icon-lane" class="sticky top-16 relative">
        <div id="slot-human" class="opacity-0 pointer-events-none"></div>
        <div id="slot-heart" class="opacity-0 pointer-events-none"></div>
        <div id="slot-dev"   class="opacity-0 pointer-events-none"></div>

        <GsapMorphLottie
          client:media="(min-width: 1280px)"
          jsonUrl={animUrl}
          stateMarkers={["human1","heart1","dev"]}
          cardSelectors={["#skills-wrap","#heart-wrap","#projects-wrap"]}
          slotSelectors={["#slot-human","#slot-heart","#slot-dev"]}
          laneSelector="#icon-lane"
          sizePx={1080}
          scaleBase={1.95}
          minScale={1.25}
          maxScale={2.2}
          offsets={[
            { x: -80, y: -120 },  // human
            { x: -80, y: -100 },  // heart
            { x: -80, y: -105 },  // dev
          ]}
        />
      </div>
    </div>
  </section>

  {links.length ? (
    <section class="mx-auto max-w-5xl mt-8">
      <ul class="flex flex-wrap gap-4 text-sm">
        {links.map((l: Link) => (
          <li><a class="underline" href={l.href} target="_blank" rel="noopener">{l.label}</a></li>
        ))}
      </ul>
    </section>
  ) : null}

  <Fragment slot="footer"><Footer /></Fragment>

  <!-- Hover → spela en gång → frys sista frame -->
 <script type="module">
  const wrap = document.getElementById('name-wrap');
  /** @type {HTMLVideoElement|null} */
  const video = document.getElementById('logo-anim');

  let playedOnce = false;

  function showAndPlay() {
    if (!video) return;
    // visa (fade/scale in)
    video.classList.add('opacity-100', 'scale-100');

    // spela bara första gången
    if (!playedOnce) {
      try {
        video.currentTime = 0;
        void video.play();
      } catch {}
    }
  }

  video?.addEventListener('ended', () => {
    playedOnce = true;
    try {
      video.pause();
      if (!Number.isNaN(video.duration)) {
        video.currentTime = Math.max(0, video.duration - 0.01);
      }
    } catch {}
  });

  // desktop + mobil
  wrap?.addEventListener('mouseenter', showAndPlay, { passive: true });
  wrap?.addEventListener('click', showAndPlay, { passive: true });
</script>

<style>
  /* LIGHT THEME (default) – mörk halo */
  :root {
    --neon-core: rgba(0,0,0,0.55);
    --neon-mid:  rgba(0,0,0,0.35);
    --neon-outer:rgba(0,0,0,0.22);
    --neon-pulse-scale: 1; /* styr intensitet i keyframes */
  }

  /* DARK THEME – funkar om .dark sitter på html ELLER body, eller data-theme="dark" används */
  html.dark, body.dark, :root[data-theme="dark"] {
    --neon-core:  #ffffff;
    --neon-mid:   rgba(255,255,255,0.85);
    --neon-outer: rgba(255,255,255,0.65);
    --neon-pulse-scale: 1.25; /* lite starkare puls i mörkt tema */
  }

  /* Basglow runt loggan */
  #logo-anim.neon {
    will-change: filter;
    filter:
      drop-shadow(0 0 6px  var(--neon-core))
      drop-shadow(0 0 16px var(--neon-mid))
      drop-shadow(0 0 32px var(--neon-outer));
  }

  /* Puls – aktiv så länge .neon-pulse finns */
  #logo-anim.neon-pulse {
    animation: neonPulse 2.6s ease-in-out infinite both;
  }

  @keyframes neonPulse {
    0%, 100% {
      filter:
        drop-shadow(0 0 calc(6px  * var(--neon-pulse-scale))  var(--neon-core))
        drop-shadow(0 0 calc(16px * var(--neon-pulse-scale))  var(--neon-mid))
        drop-shadow(0 0 calc(32px * var(--neon-pulse-scale))  var(--neon-outer));
    }
    50% {
      filter:
        drop-shadow(0 0 calc(10px * var(--neon-pulse-scale)) var(--neon-core))
        drop-shadow(0 0 calc(26px * var(--neon-pulse-scale)) var(--neon-mid))
        drop-shadow(0 0 calc(52px * var(--neon-pulse-scale)) var(--neon-outer));
    }
  }

  /* Respektera minskad rörelse */
  @media (prefers-reduced-motion: reduce) {
    #logo-anim.neon-pulse { animation: none; }
  }
</style>


</Base>
